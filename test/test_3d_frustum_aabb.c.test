#include "math.h"
#include "stdio.h"

#include "../src/wx_math.h"


void	n3_print(t_n3 n, char const *n_)
{
	printf("%s: [%f, %f, %f]\n", n_, n.x, n.y, n.z);
}


void	p3_print(t_p3 p, char const *n)
{
	printf("%s: [%f, %f, %f]\n", n, p.x, p.y, p.z);
}


void	plane_print(t_plane p, char const *n)
{
	printf("%s: d: %f, n: [%f, %f, %f]\n", n, p.d, p.n.x, p.n.y, p.n.z);
}


void	q4_print(t_q4 q, char const *n)
{
	printf("%s: [%f, %f, %f, %f]\n", n, q.x, q.y, q.z, q.w);
}


void	v3_print(t_v3 v, char const *n)
{
	printf("%s: [%f, %f, %f]\n", n, v.x, v.y, v.z);
}


void	frustum_aabb_print(t_frustum_aabb cs)
{
	if (cs == wx_frustum_aabb_all_out)
	{
		printf("clip status: all out\n");
	}
	else if (cs == wx_frustum_aabb_all_in)
	{
		printf("clip status: all in\n");
	}
	else
	{
		printf("clip status: left: %d, right: %d, bottom: %d, top: %d, near: %d, far: %d\n",
			cs & wx_frustum_aabb_left, cs & wx_frustum_aabb_right, cs & wx_frustum_aabb_bottom,
			cs & wx_frustum_aabb_top, cs & wx_frustum_aabb_near, cs & wx_frustum_aabb_far);
	}
}


/*
** 2021-03-19 todo: we're calculating an aabb of an aabb in view space which is
** sort of silly. should there be an obb type?
*/
t_aabb	zz_aabb_new_transformed(t_aabb const *a, t_m44 const *b_from_a)
{
	t_p3	max;
	t_p3	min;
	t_aabb	b;

	max = wx_m44_mul_p3(b_from_a, &a->max);
	min = wx_m44_mul_p3(b_from_a, &a->min);
	b.max.x = wx_f32_max(min.x, max.x);
	b.max.y = wx_f32_max(min.y, max.y);
	b.max.z = wx_f32_max(min.z, max.z);
	b.min.x = wx_f32_min(min.x, max.x);
	b.min.y = wx_f32_min(min.y, max.y);
	b.min.z = wx_f32_min(min.z, max.z);
	return (b);
}


void	obb_print(t_obb	const *o, char const *n)
{
	printf("%s:\n", n);
	p3_print(o->center, "center");
	n3_print(o->axes[0], "x");
	n3_print(o->axes[1], "y");
	n3_print(o->axes[2], "z");
	printf("w2: %f, h2: %f, d2: %f\n", o->extents2[0], o->extents2[1], o->extents2[2]);
}


int main(void)
{
	/*box fully out*/
	{
		printf("---\n");
		printf("box fully out:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, 0.0f, 2000.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect left*/
	{
		printf("---\n");
		printf("box intersect left:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {10.0f, 0.0f, 10.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect right*/
	{
		printf("---\n");
		printf("box intersect right:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {-10.0f, 0.0f, 10.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect bottom*/
	{
		printf("---\n");
		printf("box intersect bottom:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, -10.0f / (16.0f / 9.0f), 10.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect top*/
	{
		printf("---\n");
		printf("box intersect top:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, 10.0f / (16.0f / 9.0f), 10.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect near*/
	{
		printf("---\n");
		printf("box intersect near:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, 0.0f, 1.0f};
		t_aabb	aabb = {{0.1f, 0.1f, 0.1f}, {-0.1f, -0.1f, -0.1f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box intersect far*/
	{
		printf("---\n");
		printf("box intersect far:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, 0.0f, 1000.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	/*box fully in*/
	{
		printf("---\n");
		printf("box fully in:\n");
		t_q4	camera_orientation = {0.0f, 0.0f, 0.0f, 1.0f};
		t_p3	camera_position = {0.0f, 0.0f, 0.0f};
		t_m44	view_from_world = wx_m44_new_inverse_q4_p3(&camera_orientation, &camera_position);
		t_v3	object_axis = {0.0f, 1.0f, 0.0f};
		t_q4	object_orientation = wx_q4_new_v3_f32(&object_axis, wx_to_radians(0.0f));
		t_p3	object_position = {0.0f, 0.0f, 10.0f};
		t_aabb	aabb = {{0.5f, 0.5f, 0.5f}, {-0.5f, -0.5f, -0.5f}};
		t_m44	world_from_object = wx_m44_new_q4_p3(&object_orientation, &object_position);
		t_m44	view_from_object = wx_m44_mul_m44(&view_from_world, &world_from_object);
		t_m44	clip_from_view = wx_m44_new_perspective(wx_to_radians(90.0f), 16.0f / 9.0f, 1.0f, 1000.0f);
		t_frustum	frustum = wx_frustum_new(&clip_from_view);
		t_frustum_aabb cs = wx_frustum_aabb_test(&frustum, &aabb, &view_from_object);
		frustum_aabb_print(cs);
	}
	return (0);
}
